<%= render 'shared/header', title: 'Clients' %>

<div class="container">
  <h1 class="page-title">Clients</h1>

  <!-- Your form -->
  <%= form_tag(search_clients_path, method: :get, class: 'mb-3') do %>
    <div class="input-group">
      <%= text_field_tag :full_name, params[:full_name], class: 'form-control', id: 'client_full_name', placeholder: 'Enter client full name' %>
      <button type="submit" class="btn btn-primary">Search</button>
    </div>
  <% end %>

  <div class="dropdown" id="suggestions-container">
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
      <!-- Suggestions will be added here dynamically -->
    </div>
  </div>

  <%= link_to 'New Client', new_client_path, class: 'btn btn-primary btn-sm' %>

  <table class="table table-striped mt-4">
    <thead>
      <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Internal ID</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <% @clients.each do |client| %>
        <tr>
          <td><%= client.first_name %></td>
          <td><%= client.last_name %></td>
          <td><%= client.id %></td>
          <td>
            <%= link_to 'Show', client, class: 'btn btn-secondary btn-sm' %>
            <%= link_to 'Edit', edit_client_path(client), class: 'btn btn-warning btn-sm' %>
            <%= link_to 'Destroy', client, method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger btn-sm' %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<!-- JavaScript Autocomplete -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const fullNameInput = document.getElementById('client_full_name');
    const suggestionsContainer = document.getElementById('suggestions-container');

    fullNameInput.addEventListener('input', function () {
      const fullName = fullNameInput.value.trim();

      // Clear previous suggestions
      suggestionsContainer.querySelector('.dropdown-menu').innerHTML = '';

      // Make an AJAX request to fetch suggestions
      if (fullName.length > 0) {
        fetch(`/clients/autocomplete?full_name=${encodeURIComponent(fullName)}`)
          .then(response => response.json())
          .then(data => {
            const dropdownMenu = suggestionsContainer.querySelector('.dropdown-menu');

            data.forEach(suggestion => {
              const link = document.createElement('a');
              link.href = `/clients/${suggestion.id}`;
              link.classList.add('dropdown-item');
              link.textContent = suggestion.full_name + ", ";
              link.addEventListener('click', function (event) {
                event.preventDefault();
                fullNameInput.value = suggestion.full_name;
                suggestionsContainer.querySelector('.dropdown-menu').innerHTML = ''; // Clear suggestions
              });
              dropdownMenu.appendChild(link);
            });

            // Show the dropdown
            suggestionsContainer.classList.add('show');
          });
      } else {
        // Hide the dropdown if the input is empty
        suggestionsContainer.classList.remove('show');
      }
    });

    // Close the dropdown if clicked outside
    document.addEventListener('click', function (event) {
      if (!suggestionsContainer.contains(event.target)) {
        suggestionsContainer.classList.remove('show');
      }
    });
  });
</script>

<%= render 'shared/footer' %>
